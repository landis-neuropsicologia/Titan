<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UserStatus_Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="UserStatus_Deleted" xml:space="preserve">
    <value>Deleted</value>
  </data>
  <data name="UserStatus_Expired" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="UserStatus_ExpiresAt" xml:space="preserve">
    <value>Expires at</value>
  </data>
  <data name="UserStatus_Inactive" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="UserStatus_Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="UserStatus_Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="UserStatus_Suspended" xml:space="preserve">
    <value>Suspended</value>
  </data>
  <data name="UserStatus_WithExpiration" xml:space="preserve">
    <value>Expiration date must be in the future.</value>
  </data>
  <data name="UserStatus_WithReason" xml:space="preserve">
    <value>Reason cannot be empty.</value>
  </data>
  <data name="UserBase_EmailEmpty" xml:space="preserve">
    <value>Email cannot be null or empty.</value>
  </data>
  <data name="UserBase_RoleEmpty" xml:space="preserve">
    <value>Role cannot be null or empty.</value>
  </data>
  <data name="UserStatus_CreateDeleted" xml:space="preserve">
    <value>Reason is required for deleted status.</value>
  </data>
  <data name="UserStatus_CreateLocked" xml:space="preserve">
    <value>Reason is required for locked status.</value>
  </data>
  <data name="UserStatus_CreateSuspended" xml:space="preserve">
    <value>Reason is required for suspended status.</value>
  </data>
  <data name="UserStatus_Unknown" xml:space="preserve">
    <value>Unknown status type:</value>
  </data>
  <data name="SocialMediaProvider_Google" xml:space="preserve">
    <value>Google</value>
  </data>
  <data name="SocialMediaProvider_Microsoft" xml:space="preserve">
    <value>Microsoft</value>
  </data>
  <data name="SocialMediaProvider_UnsupportedProvider" xml:space="preserve">
    <value>Unsupported social media provider:</value>
  </data>
  <data name="SocialMediaProvider_Facebook" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="PhoneNumber_Empty" xml:space="preserve">
    <value>Phone number cannot be empty.</value>
  </data>
  <data name="PhoneNumber_InternationalNumberInvalid" xml:space="preserve">
    <value>Invalid international phone number format.</value>
  </data>
  <data name="PhoneNumber_NationalNumberInvalid" xml:space="preserve">
    <value>Invalid phone number format.</value>
  </data>
  <data name="PhoneNumber_ToE164Format" xml:space="preserve">
    <value>Cannot convert to E.164 format without country code.</value>
  </data>
  <data name="PasswordHash_Empty" xml:space="preserve">
    <value>Password cannot be empty.</value>
  </data>
  <data name="PasswordHash_HashEmpty" xml:space="preserve">
    <value>Hash value cannot be empty.</value>
  </data>
  <data name="Name_Empty" xml:space="preserve">
    <value>Name cannot be null or empty.</value>
  </data>
  <data name="Name_TooLong" xml:space="preserve">
    <value>Name is too long.</value>
  </data>
  <data name="JobTitle_Empty" xml:space="preserve">
    <value>Job title cannot be empty.</value>
  </data>
  <data name="JobTitle_LevelNegative" xml:space="preserve">
    <value>Level cannot be negative.</value>
  </data>
  <data name="JobTitle_AbbreviationNegative" xml:space="preserve">
    <value>Abbreviation cannot be empty.</value>
  </data>
  <data name="JobTitle_DepartmentEmpty" xml:space="preserve">
    <value>Department cannot be empty.</value>
  </data>
  <data name="JobTitle_UnknownAbbreviation" xml:space="preserve">
    <value>Unknown job title abbreviation:</value>
  </data>
  <data name="EmployeeId_Empty" xml:space="preserve">
    <value>Employee ID cannot be empty.</value>
  </data>
  <data name="EmployeeId_TooLong" xml:space="preserve">
    <value>Employee ID is too long.</value>
  </data>
  <data name="Email_Empty" xml:space="preserve">
    <value>Email cannot be null or empty.</value>
  </data>
  <data name="Email_TooLong" xml:space="preserve">
    <value>Email is too long.</value>
  </data>
  <data name="Email_Invalid" xml:space="preserve">
    <value>Email is invalid.</value>
  </data>
  <data name="DomainName_TooLong" xml:space="preserve">
    <value>Domain is too long.</value>
  </data>
  <data name="DomainName_EmptyPeriod" xml:space="preserve">
    <value>Domain must contain at least one period.</value>
  </data>
  <data name="DateRange_GreaterThan" xml:space="preserve">
    <value>End date must be equal to or greater than start date.</value>
    <comment>End date must be equal to or greater than start date.</comment>
  </data>
  <data name="DateRange_Negative" xml:space="preserve">
    <value>Duration cannot be negative.</value>
    <comment>End date must be equal to or greater than start date.</comment>
  </data>
  <data name="DateRange_DaysNotNegative" xml:space="preserve">
    <value>Number of days cannot be negative.</value>
    <comment>End date must be equal to or greater than start date.</comment>
  </data>
  <data name="DateRange_Intersect" xml:space="preserve">
    <value>Cannot intersect non-overlapping date ranges.</value>
    <comment>End date must be equal to or greater than start date.</comment>
  </data>
  <data name="DateRange_Union" xml:space="preserve">
    <value>Cannot union non-overlapping date ranges.</value>
    <comment>End date must be equal to or greater than start date.</comment>
  </data>
  <data name="DateRange_Split" xml:space="preserve">
    <value>Interval must be positive.</value>
    <comment>End date must be equal to or greater than start date.</comment>
  </data>
  <data name="Currency_Empty" xml:space="preserve">
    <value>Currency code cannot be empty.</value>
  </data>
  <data name="Currency_Add" xml:space="preserve">
    <value>Cannot add currencies with different codes:</value>
  </data>
  <data name="Currency_Divide" xml:space="preserve">
    <value>Cannot divide by zero.</value>
  </data>
  <data name="Currency_Subtract" xml:space="preserve">
    <value>Cannot subtract currencies with different codes:</value>
  </data>
  <data name="Currency_And" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="Currency_ValueEmpty" xml:space="preserve">
    <value>Value cannot be empty.</value>
  </data>
  <data name="Currency_InvalidValue" xml:space="preserve">
    <value>Invalid monetary value.</value>
  </data>
  <data name="CompositeRoleName_RoleEmpty" xml:space="preserve">
    <value>At least one role name must be provided.</value>
  </data>
  <data name="CompositeRoleName_RoleName" xml:space="preserve">
    <value>Role name cannot be empty.</value>
  </data>
  <data name="CompositeRoleName_Remove" xml:space="preserve">
    <value>Cannot remove the last role from a composite role.</value>
  </data>
  <data name="CompositeRoleName_CompositeRoleEmpty" xml:space="preserve">
    <value>Composite role name cannot be empty.</value>
  </data>
  <data name="CompositeRoleName_Intersect" xml:space="preserve">
    <value>Role intersection resulted in empty set.</value>
  </data>
  <data name="Address_StreetEmpty" xml:space="preserve">
    <value>Street cannot be empty.</value>
  </data>
  <data name="Address_ZipEmpty" xml:space="preserve">
    <value>Zip code cannot be empty.</value>
  </data>
  <data name="Address_StateEmpty" xml:space="preserve">
    <value>State cannot be empty.</value>
  </data>
  <data name="Address_CityEmpty" xml:space="preserve">
    <value>City cannot be empty.</value>
  </data>
  <data name="Address_CountryEmpty" xml:space="preserve">
    <value>Country cannot be empty.</value>
  </data>
  <data name="Address_NumberEmpty" xml:space="preserve">
    <value>Number cannot be empty.</value>
  </data>
  <data name="ActivationKey_Empty" xml:space="preserve">
    <value>Activation key cannot be empty.</value>
  </data>
  <data name="TaxNumber_Empty" xml:space="preserve">
    <value>Tax Number cannot be empty.</value>
  </data>
  <data name="Role_Empty" xml:space="preserve">
    <value>Role name cannot be null or empty.</value>
  </data>
  <data name="Company_Empty" xml:space="preserve">
    <value>Company name cannot be null or empty.</value>
  </data>
  <data name="CompanyUser_Empty" xml:space="preserve">
    <value>Company name cannot be null or empty.</value>
  </data>
  <data name="ActivityLog_ActionEmpty" xml:space="preserve">
    <value>Action cannot be null or empty.</value>
  </data>
  <data name="ActivityLog_UserIdEmpty" xml:space="preserve">
    <value>User ID cannot be empty.</value>
  </data>
  <data name="StaffUser_NameEmpty" xml:space="preserve">
    <value>Name cannot be null or empty.</value>
  </data>
  <data name="PersonUser_NameEmpty" xml:space="preserve">
    <value>Name cannot be null or empty.</value>
  </data>
  <data name="StaffUser_EmployeeIdEmpty" xml:space="preserve">
    <value>Employee ID cannot be null or empty.</value>
  </data>
</root>